<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DT-PC" ignored="0" name="Test" tests="17" failures="4" timestamp="27 Mar 2018 06:41:55 GMT" time="0.259" errors="0">
  <testcase name="@BeforeMethod setup" time="0.022" classname="com.dt.test.controller.ToDoControllerTest">
    <failure type="java.lang.IllegalArgumentException" message="WebApplicationContext is required">
      <![CDATA[java.lang.IllegalArgumentException: WebApplicationContext is required
at org.springframework.util.Assert.notNull(Assert.java:134)
at org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder.<init>(DefaultMockMvcBuilder.java:52)
at org.springframework.test.web.servlet.setup.MockMvcBuilders.webAppContextSetup(MockMvcBuilders.java:47)
at com.dt.test.controller.ToDoControllerTest.setup(ToDoControllerTest.java:38)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="verifyAllToDoList" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyAllToDoList -->
  <testcase name="verifyDeleteToDo" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyDeleteToDo -->
  <testcase name="verifyInvalidToDoArgument" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyInvalidToDoArgument -->
  <testcase name="verifyInvalidToDoId" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyInvalidToDoId -->
  <testcase name="verifyInvalidToDoIdToDelete" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyInvalidToDoIdToDelete -->
  <testcase name="verifyInvalidToDoUpdate" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyInvalidToDoUpdate -->
  <testcase name="verifyMalformedSaveToDo" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyMalformedSaveToDo -->
  <testcase name="verifyNullToDo" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyNullToDo -->
  <testcase name="verifyToDoById" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyToDoById -->
  <testcase name="verifyUpdateToDo" time="0.0" classname="com.dt.test.controller.ToDoControllerTest">
    <skipped/>
  </testcase> <!-- verifyUpdateToDo -->
  <testcase name="contextLoads" time="0.002" classname="com.dt.test.bootL.DemoApplicationTests"/>
  <testcase name="validateInvalidPayLoad" time="0.005" classname="com.dt.test.util.PayloadValidatorTest"/>
  <testcase name="validatePayLoad" time="0.002" classname="com.dt.test.util.PayloadValidatorTest"/>
  <testcase name="removeToDo" time="0.002" classname="com.dt.test.service.ToDoServiceTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.dt.service.ToDoServiceImpl.removeToDo(ToDoServiceImpl.java:34)
at com.dt.test.service.ToDoServiceTest.removeToDo(ToDoServiceTest.java:72)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- removeToDo -->
  <testcase name="saveToDo" time="0.003" classname="com.dt.test.service.ToDoServiceTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.dt.test.service.ToDoServiceTest.saveToDo(ToDoServiceTest.java:62)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- saveToDo -->
  <testcase name="testGetAllToDo" time="0.002" classname="com.dt.test.service.ToDoServiceTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.dt.test.service.ToDoServiceTest.testGetAllToDo(ToDoServiceTest.java:43)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- testGetAllToDo -->
  <testcase name="testGetToDoById" time="0.003" classname="com.dt.test.service.ToDoServiceTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.dt.test.service.ToDoServiceTest.testGetToDoById(ToDoServiceTest.java:52)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- testGetToDoById -->
</testsuite> <!-- Test -->
